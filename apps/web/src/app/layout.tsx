import type { Metadata } from "next";
import { Inter as FontSans } from "next/font/google";
import { cn } from "@/lib/utils";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import { Toaster } from "@/components/ui/toaster";
import Providers from "./providers";
import QueryProvider from "./query-provider";
import { getHeaderInfo } from "@/lib/cookies";
import { getCurrentUser } from "@/lib/features/auth/auth.queries";
import {
  dehydrate,
  HydrationBoundary,
  QueryClient,
} from "@tanstack/react-query";

const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const queryClient = new QueryClient();
  const { headers } = getHeaderInfo();

  const user = headers?.Cookie
    ? await getCurrentUser({
        headers,
      }).catch((_) => null)
    : null;

  queryClient.setQueryData(["me"], user);

  const dehydratedState = dehydrate(queryClient);

  return (
    <html lang="en">
      <body
        className={cn(
          "min-h-screen bg-background font-sans antialiased",
          fontSans.variable,
        )}
      >
        <QueryProvider>
          <HydrationBoundary state={dehydratedState}>
            <ThemeProvider
              attribute="class"
              defaultTheme="dark"
              enableSystem
              disableTransitionOnChange
            >
              <Providers>{children}</Providers>
              <Toaster />
            </ThemeProvider>
          </HydrationBoundary>
        </QueryProvider>
      </body>
    </html>
  );
}
